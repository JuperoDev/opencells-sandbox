{
  "version": 3,
  "sources": ["../../@open-cells/element-controller/src/ElementController.js"],
  "sourcesContent": ["import { $bridge, enqueCommand } from '@open-cells/core';\n\nfunction __callBridge(...args) {\n  const [command, ...parameters] = args;\n  let result;\n\n  // cells is ready\n  if ($bridge) {\n    if (!$bridge[command]) {\n      throw new Error(`WARNING: Invalid cells bridge command execution: ${command}.`);\n    }\n\n    result = $bridge[command](...parameters);\n    return result;\n  }\n\n  enqueCommand(command, parameters);\n  return result;\n}\n\nexport class ElementController {\n  constructor(host) {\n    (this.host = host).addController(this);\n  }\n\n  subscribe(channelName, callback) {\n    __callBridge('registerInConnection', channelName, this.host, callback);\n  }\n\n  unsubscribe(channels) {\n    __callBridge('unsubscribe', channels, this.host);\n  }\n\n  publish(channelName, value, options = {}) {\n    __callBridge('publish', channelName, value, options);\n  }\n\n  publishOn(channelName, htmlElement, eventName) {\n    __callBridge('registerOutConnection', channelName, htmlElement, eventName);\n  }\n\n  navigate(page, params) {\n    __callBridge('navigate', page, params);\n  }\n\n  updateInterceptorContext(ctx) {\n    __callBridge('updateInterceptorContext', ctx);\n  }\n\n  resetInterceptorContext() {\n    __callBridge('resetInterceptorContext');\n  }\n\n  getInterceptorContext() {\n    return __callBridge('getInterceptorContext');\n  }\n\n  setInterceptorContext(ctx) {\n    __callBridge('setInterceptorContext', ctx);\n  }\n\n  getCurrentRoute() {\n    __callBridge('getCurrentRoute');\n  }\n\n  updateSubroute(subroute) {\n    __callBridge('updateSubroute', subroute);\n  }\n\n  backStep() {\n    __callBridge('backStep');\n  }\n}\n"],
  "mappings": ";;;;;;AAEA,SAAS,gBAAgB,MAAM;AAC7B,QAAM,CAAC,SAAS,GAAG,UAAU,IAAI;AACjC,MAAI;AAGJ,MAAI,SAAS;AACX,QAAI,CAAC,QAAQ,OAAO,GAAG;AACrB,YAAM,IAAI,MAAM,oDAAoD,OAAO,GAAG;AAAA,IAChF;AAEA,aAAS,QAAQ,OAAO,EAAE,GAAG,UAAU;AACvC,WAAO;AAAA,EACT;AAEA,eAAa,SAAS,UAAU;AAChC,SAAO;AACT;AAEO,IAAM,oBAAN,MAAwB;AAAA,EAC7B,YAAY,MAAM;AAChB,KAAC,KAAK,OAAO,MAAM,cAAc,IAAI;AAAA,EACvC;AAAA,EAEA,UAAU,aAAa,UAAU;AAC/B,iBAAa,wBAAwB,aAAa,KAAK,MAAM,QAAQ;AAAA,EACvE;AAAA,EAEA,YAAY,UAAU;AACpB,iBAAa,eAAe,UAAU,KAAK,IAAI;AAAA,EACjD;AAAA,EAEA,QAAQ,aAAa,OAAO,UAAU,CAAC,GAAG;AACxC,iBAAa,WAAW,aAAa,OAAO,OAAO;AAAA,EACrD;AAAA,EAEA,UAAU,aAAa,aAAa,WAAW;AAC7C,iBAAa,yBAAyB,aAAa,aAAa,SAAS;AAAA,EAC3E;AAAA,EAEA,SAAS,MAAM,QAAQ;AACrB,iBAAa,YAAY,MAAM,MAAM;AAAA,EACvC;AAAA,EAEA,yBAAyB,KAAK;AAC5B,iBAAa,4BAA4B,GAAG;AAAA,EAC9C;AAAA,EAEA,0BAA0B;AACxB,iBAAa,yBAAyB;AAAA,EACxC;AAAA,EAEA,wBAAwB;AACtB,WAAO,aAAa,uBAAuB;AAAA,EAC7C;AAAA,EAEA,sBAAsB,KAAK;AACzB,iBAAa,yBAAyB,GAAG;AAAA,EAC3C;AAAA,EAEA,kBAAkB;AAChB,iBAAa,iBAAiB;AAAA,EAChC;AAAA,EAEA,eAAe,UAAU;AACvB,iBAAa,kBAAkB,QAAQ;AAAA,EACzC;AAAA,EAEA,WAAW;AACT,iBAAa,UAAU;AAAA,EACzB;AACF;",
  "names": []
}
